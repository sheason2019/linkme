struct User {
  int UserId;

  string Username;
  string Password;

  optional string AvatarUrl;
  optional string Signature;
}

struct GetCryptoInfoResponse {
  string RsaPubKey;
  string Salt;
  int SaltId;
}

struct GetUsersByUsernameResponse {
  // 拉取的用户信息
  repeated User Users;
  // 是否存有更多用户
  boolean HasMore;
}

service Account {
  // 获取登录所需的秘钥信息
  GetCryptoInfoResponse GetCryptoInfo();
  // 接受登录信息，返回jwt
  string Login(User user, int saltId);
  // 同Login
  string Regist(User user, int saltId);
  // 使用请求头中的JWT获取当前的用户信息
  User GetCurrentUser();
  // 根据用户名搜索用户信息，一次最多拉取25条
  GetUsersByUsernameResponse GetUsersByUsername(string username, int offset);
  // 下面这两接口先这样实现，如果未来用户相关的属性数量上去了，额外抽象出一个Profile结构体来整合这些数据
  // 设置自己的头像信息，需要使用本地服务器上的文件
  void PutAvatar(string imageHash);
  // 设置个性签名
  void PutSignature(string signature);
}